{
	"$schema": "https://raw.githubusercontent.com/RedCMD/TmLanguage-Syntax-Highlighter/main/vscode.tmLanguage.schema.json",
	"name": "JSON escaped Regexes",
	"scopeName": "source.json.regexp",
	"injectionSelector": [
		"L:source.json.embedded .meta.embedded.patternProperties. meta.structure.dictionary.json support.type.property-name.json -(.meta.embedded.patternProperties. meta.structure.dictionary.json meta.structure.dictionary.json) -(.meta.embedded.patternProperties. meta.structure.array.json) -meta.embedded.json.textmate.regexp -comment",
		"L:source.json.embedded .meta.embedded.pattern. string.quoted.double.json -(.meta.embedded.pattern. meta.structure.dictionary.json) -(.meta.embedded.pattern. meta.structure.array.json) -meta.embedded.json.textmate.regexp -comment",
		"L:source.json.embedded .meta.embedded.contributes. .meta.embedded.languages. meta.structure.array.json .meta.embedded.firstLine. string.quoted.double.json -(meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json) -(meta.structure.array.json meta.structure.array.json) -meta.embedded.json.textmate.regexp -comment",
		"L:source.json.embedded .meta.embedded.contributes. .meta.embedded.problemMatchers. meta.structure.array.json .meta.embedded.background. (.meta.embedded.beginsPattern. | .meta.embedded.endsPattern.) (string.quoted.double.json -(meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json) | .meta.embedded.regexp. string.quoted.double.json -(meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json)) -(meta.structure.array.json meta.structure.array.json) -meta.embedded.json.textmate.regexp -comment",
		"L:source.json.embedded .meta.embedded.contributes. .meta.embedded.problemMatchers. meta.structure.array.json .meta.embedded.pattern. meta.structure.array.json .meta.embedded.regexp. string.quoted.double.json -(meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json) -(meta.structure.array.json meta.structure.array.json meta.structure.array.json) -meta.embedded.json.textmate.regexp -comment",
		"L:source.json.embedded .meta.embedded.contributes. .meta.embedded.problemMatchers. meta.structure.array.json .meta.embedded.pattern. .meta.embedded.regexp. string.quoted.double.json -(meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json) -(meta.structure.array.json meta.structure.array.json) -meta.embedded.json.textmate.regexp -comment",
		"L:source.json.embedded .meta.embedded.contributes. .meta.embedded.problemPatterns. meta.structure.array.json .meta.embedded.patterns. meta.structure.array.json .meta.embedded.regexp. string.quoted.double.json -(meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json) -(meta.structure.array.json meta.structure.array.json meta.structure.array.json) -meta.embedded.json.textmate.regexp -comment",
		"L:source.json.embedded .meta.embedded.contributes. .meta.embedded.problemPatterns. meta.structure.array.json .meta.embedded.regexp. string.quoted.double.json -(meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json meta.structure.dictionary.json) -(meta.structure.array.json meta.structure.array.json) -meta.embedded.json.textmate.regexp -comment"
	],
	"patterns": [
		{
			"comment": "https://github.com/microsoft/vscode-textmate/issues/242",
			"include": "source.json.textmate.regexp#_pre-load_"
		},
		{ "include": "#regexp" }
	],
	"repository": {
		"regexp": {
			"match": "(?<=\")\\G(?>[^\\\\\"\\x-\\x1F]++|\\\\.)++",
			"captures": {
				"0": {
					"name": "meta.embedded.json.textmate.regexp",
					"patterns": [
						{ "include": "source.json.textmate.regexp" },
						{ "include": "source.json#stringcontent" }
					]
				}
			}
		}
	}
}
